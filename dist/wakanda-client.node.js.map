{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 27704b83a967ea90a2c1","webpack:///./src/entry.node.ts","webpack:///./src/wakanda-client.ts","webpack:///./src/business/catalog-business.ts","webpack:///./src/business/abstract-business.ts","webpack:///./src/data-access/service/catalog-service.ts","webpack:///./src/data-access/service/abstract-service.ts","webpack:///./src/data-access/service/base/catalog-base-service.ts","webpack:///./src/presentation/catalog.ts","webpack:///./src/presentation/dataclass.ts","webpack:///./src/business/dataclass-business.ts","webpack:///./src/business/entity-business.ts","webpack:///./src/data-access/service/entity-service.ts","webpack:///./src/data-access/service/base/entity-base-service.ts","webpack:///./src/data-access/util.ts","webpack:///./src/presentation/entity.ts","webpack:///./src/business/method-adapter.ts","webpack:///./src/presentation/media.ts","webpack:///./src/business/util.ts","webpack:///./src/data-access/service/dataclass-service.ts","webpack:///./src/data-access/service/base/dataclass-base-service.ts","webpack:///./src/business/collection-business.ts","webpack:///./src/data-access/service/collection-service.ts","webpack:///./src/data-access/service/base/collection-base-service.ts","webpack:///./src/const.ts","webpack:///./src/business/media-business.ts","webpack:///./src/data-access/service/media-service.ts","webpack:///./src/data-access/service/base/media-base-service.ts","webpack:///./src/presentation/collection.ts","webpack:///./src/business/directory-business.ts","webpack:///./src/data-access/service/directory-service.ts","webpack:///./src/data-access/service/base/directory-base-service.ts","webpack:///./package.json","webpack:///./src/data-access/http/node-http-client.ts","webpack:///external \"request\"","webpack:///./src/data-access/http/http-client.ts","webpack:///./src/data-access/http/http-response.ts"],"names":[],"mappings":"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","file":"wakanda-client.node.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"request\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"request\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WakandaClient\"] = factory(require(\"request\"));\n\telse\n\t\troot[\"WakandaClient\"] = factory(root[\"request\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_34__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 27704b83a967ea90a2c1","import WakandaClient from './wakanda-client';\nimport NodeHttpClient from './data-access/http/node-http-client';\n\nimport {CatalogBaseService} from './data-access/service/base/catalog-base-service';\nimport {CollectionBaseService} from './data-access/service/base/collection-base-service';\nimport {DataClassBaseService} from './data-access/service/base/dataclass-base-service';\nimport {DirectoryBaseService} from './data-access/service/base/directory-base-service';\nimport {EntityBaseService} from './data-access/service/base/entity-base-service';\nimport {MediaBaseService} from './data-access/service/base/media-base-service';\n\nWakandaClient.HttpClient = NodeHttpClient;\n\nexport {\n  WakandaClient,\n  CatalogBaseService,\n  CollectionBaseService,\n  DataClassBaseService,\n  DirectoryBaseService,\n  EntityBaseService,\n  MediaBaseService\n}; \n\n\n\n// WEBPACK FOOTER //\n// ./src/entry.node.ts","import CatalogBusiness from './business/catalog-business';\nimport DirectoryBusiness from './business/directory-business';\nimport Entity from './presentation/entity';\nimport Collection from './presentation/collection';\nimport HttpClient from './data-access/http/http-client';\nimport Catalog from './presentation/catalog';\nimport BrowserHttpClient from './data-access/http/browser-http-client';\nimport NodeHttpClient from './data-access/http/node-http-client';\n\nconst packageOptions: any = require('../package.json');\n\nexport interface IDirectory {\n  login(username: string, password: string, duration?: number): Promise<boolean>;\n  logout(): Promise<boolean>;\n  currentUser(): Promise<any>;\n  currentUserBelongsTo(groupName: string): Promise<boolean>;\n}\n\nexport interface IHelper {\n  isEntity(object: any): boolean;\n  isCollection(object: any): boolean;\n}\n\nclass WakandaClient {\n\n  public static HttpClient: typeof BrowserHttpClient|typeof NodeHttpClient;\n\n  public _httpClient: HttpClient;\n  public directory: IDirectory;\n  public helper: IHelper;\n  public catalog: string;\n\n  constructor(params: {host?: string, catalog?: string}|any) {\n    let host = typeof(params) === 'object' ? params.host : undefined;\n    let catalog = typeof(params) === 'object' ? params.catalog : undefined;\n\n    this._httpClient = new WakandaClient.HttpClient({\n      apiPrefix: (host || '')\n    });\n\n    this.catalog = catalog;\n\n    let directoryBusiness = new DirectoryBusiness({\n      wakJSC: this\n    });\n\n    this.directory = {\n      login: (username, password, duration) => {\n        return directoryBusiness.login(username, password, duration);\n      },\n      logout: () => {\n        return directoryBusiness.logout();\n      },\n      currentUser: () => {\n        return directoryBusiness.currentUser();\n      },\n      currentUserBelongsTo: (group) => {\n        return directoryBusiness.currentUserBelongsTo(group);\n      }\n    };\n\n    this.helper = {\n      isEntity: object => {\n        return object instanceof Entity;\n      },\n      isCollection: object => {\n        return object instanceof Collection;\n      }\n    };\n  }\n\n  public getCatalog(dataClasses?: string[]): Promise<Catalog> {\n    let catalogBusiness = new CatalogBusiness({\n      wakJSC: this\n    });\n\n    return catalogBusiness.get(dataClasses);\n  }\n\n  public version(): string {\n    return packageOptions.version;\n  }\n}\n\nexport default WakandaClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/wakanda-client.ts","import AbstractBusiness from './abstract-business';\nimport CatalogService from '../data-access/service/catalog-service';\nimport Catalog from '../presentation/catalog';\nimport {DataClass, Attribute, AttributeRelated, AttributeCollection} from '../presentation/dataclass';\nimport DataClassBusiness from './dataclass-business';\n\nexport interface IDataClassDBO {\n  name: string;\n  collectionName: string;\n  dataURI: string;\n  attributes: {\n    name: string,\n    type: string,\n    kind: string,\n    readOnly: boolean,\n    simpleDate: boolean\n  }[];\n  methods: {\n    name: string,\n    applyTo: string\n  }[];\n}\n\nclass CatalogBusiness extends AbstractBusiness {\n\n  private service: CatalogService;\n  private seenDataClasses: string[];\n\n  constructor(obj: any) {\n    super(obj);\n\n    this.service = new CatalogService({\n      wakJSC: this.wakJSC\n    });\n  }\n\n  private needDataClass(dcName: string) {\n    if (this.seenDataClasses.indexOf(dcName) === -1) {\n      this.seenDataClasses.push(dcName);\n    }\n  }\n\n  public get(dataClasses?: string[]): Promise<Catalog> {\n\n    this.seenDataClasses = [];\n\n    return this.service.get(dataClasses).then((dataClassDBOArray: IDataClassDBO[]) => {\n\n      let dcArray: DataClass[] = [];\n\n      for (let dcDBO of dataClassDBOArray) {\n        let attributes: Attribute[] = [];\n\n        for (let attr of dcDBO.attributes) {\n          switch (attr.kind) {\n            case 'relatedEntity':\n              attributes.push(new AttributeRelated({\n                name: attr.name,\n                type: attr.type,\n                kind: attr.kind\n              }));\n              this.needDataClass(attr.type);\n              break;\n            case 'storage':\n            case 'calculated':\n            case 'alias':\n              let readOnly = attr.readOnly || (attr.type === 'image' || attr.type === 'blob');\n              let simpleDate = attr.simpleDate !== undefined ? attr.simpleDate : undefined;\n              attributes.push(new Attribute({\n                name: attr.name,\n                type: attr.type,\n                readOnly,\n                kind: attr.kind,\n                simpleDate: simpleDate\n              }));\n              break;\n            case 'relatedEntities':\n              let entityType: string;\n              dataClassDBOArray.some((_dataClass) => {\n                if (_dataClass.collectionName === attr.type) {\n                  entityType = _dataClass.name;\n                  return true;\n                }\n              });\n              let attrCollection = new AttributeCollection({\n                name: attr.name,\n                type: attr.type,\n                kind: attr.kind,\n                entityType: entityType\n              });\n              attributes.push(attrCollection);\n              this.needDataClass(attrCollection.entityType);\n              break;\n            default:\n              throw new Error('[WakandaClient] Unhandled ' + attr.kind + ' attribute type');\n          }\n        }\n\n        let methods: {\n          entity: string[],\n          collection: string[],\n          dataClass: string[]\n        } = {\n          entity: [],\n          collection: [],\n          dataClass: []\n        };\n\n        for (let method of dcDBO.methods) {\n          switch (method.applyTo) {\n            case 'entity':\n              methods.entity.push(method.name);\n              break;\n            case 'entityCollection':\n              methods.collection.push(method.name);\n              break;\n            case 'dataClass':\n              methods.dataClass.push(method.name);\n              break;\n            default:\n              throw new Error('[WakandaClient] Unrecognized ' + method.applyTo + ' method type');\n          }\n        }\n\n        let dataClass = new DataClass({\n          name: dcDBO.name,\n          collectionName: dcDBO.collectionName,\n          attributes,\n          methods\n        });\n\n        //Binding framework methods to the dataclass\n        let dataClassBusiness = new DataClassBusiness({\n          wakJSC: this.wakJSC,\n          dataClass,\n          methods,\n          dataURI: dcDBO.dataURI\n        });\n        dataClassBusiness._decorateDataClass();\n\n        dcArray.push(dataClass);\n      }\n\n      let catalog = new Catalog({\n        dataClasses: dcArray\n      });\n\n      //Check if we have all needed dataClasses on the catalog\n      for (let dcName of this.seenDataClasses) {\n        if (!catalog[dcName]) {\n          throw new Error('Needed ' + dcName + ' dataClass is not present on catalog');\n        }\n      }\n\n      return catalog;\n    });\n  }\n}\n\nexport default CatalogBusiness;\n\n\n\n// WEBPACK FOOTER //\n// ./src/business/catalog-business.ts","import WakandaClient from '../wakanda-client';\n\nabstract class AbstractBusiness {\n\n  public wakJSC: WakandaClient;\n\n  constructor({wakJSC}: {wakJSC: WakandaClient}) {\n    this.wakJSC = wakJSC;\n  }\n}\n\nexport default AbstractBusiness;\n\n\n\n// WEBPACK FOOTER //\n// ./src/business/abstract-business.ts","import AbstractService from './abstract-service';\nimport {IDataClassDBO} from '../../business/catalog-business';\nimport {CatalogBaseService} from './base/catalog-base-service';\n\nclass CatalogService extends AbstractService {\n\n  public get(dataClasses?: string| string[]): Promise<IDataClassDBO[]> {\n    return CatalogBaseService.get({\n      httpClient: this.httpClient,\n      dataClasses,\n      catalog: this.wakJSC.catalog\n    });\n  }\n}\n\nexport default CatalogService;\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/service/catalog-service.ts","import WakandaClient from '../../wakanda-client';\nimport HttpClient from '../http/http-client';\n\nabstract class AbstractService {\n\n  protected httpClient: HttpClient;\n  protected wakJSC: WakandaClient;\n\n  constructor({wakJSC}: {wakJSC: WakandaClient}) {\n    this.wakJSC = wakJSC;\n    this.httpClient = wakJSC._httpClient;\n  }\n}\n\nexport default AbstractService;\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/service/abstract-service.ts","import HttpClient from '../../http/http-client';\nimport {IDataClassDBO} from '../../../business/catalog-business';\n\nexport class CatalogBaseService {\n\n  public static get({httpClient, dataClasses, catalog}: {httpClient: HttpClient, dataClasses?: string|string[], catalog: string}) {\n    let strDataclasses = '/';\n\n    if (Array.isArray(dataClasses)) {\n      strDataclasses += dataClasses.join();\n    }\n    else if (typeof dataClasses === 'undefined') {\n      strDataclasses += '$all';\n    }\n    else {\n      throw new Error('Catalog.get: first parameter should be an array');\n    }\n\n    let strCatalog = catalog ? '/' + catalog : '';\n\n    return httpClient.get({uri: '/rest/$catalog' + strCatalog + strDataclasses})\n      .then(res => {\n        let catalogContent: IDataClassDBO[] = [];\n        let rawObj = JSON.parse(res.body);\n\n        if (rawObj.dataClasses) {\n          for (let d of rawObj.dataClasses) {\n\n            let attributes: any[] = [];\n            if (d.attributes) { //Seriously? :)\n              for (let attr of d.attributes) {\n                attributes.push({\n                  name: attr.name,\n                  kind: attr.kind,\n                  type: attr.type,\n                  readOnly: attr.readOnly,\n                  simpleDate: attr.simpleDate === undefined ? undefined : attr.simpleDate\n                });\n              }\n            }\n\n            let methods: any[] = [];\n            if (d.methods) {\n              for (let m of d.methods) {\n                methods.push({\n                  name: m.name,\n                  applyTo: m.applyTo\n                });\n              }\n            }\n\n            catalogContent.push({\n              name: d.name,\n              collectionName: d.collectionName,\n              attributes,\n              methods,\n              dataURI: d.dataURI\n            });\n          }\n        }\n\n        return catalogContent;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/service/base/catalog-base-service.ts","import {DataClass} from './dataclass';\n\nclass Catalog {\n\n  [key: string]: DataClass;\n\n  constructor({dataClasses}: {dataClasses: DataClass[]}) {\n    for (let dc of dataClasses) {\n      this[dc.name] = dc;\n    }\n  }\n}\n\nexport default Catalog;\n\n\n\n// WEBPACK FOOTER //\n// ./src/presentation/catalog.ts","import Entity from './entity';\nimport Collection from './collection';\nimport {QueryOption} from './query-option';\n\nexport class DataClass {\n\n  public name: string;\n  public collectionName: string;\n  public attributes: Attribute[];\n  public methods: {\n    entity: string[],\n    collection: string[],\n    dataClass: string[]\n  };\n\n  public find: (id: string|number, options?: QueryOption) => Promise<Entity>;\n  public query: (options?: QueryOption) => Promise<Collection>;\n  public create: (pojo?: any) => Entity;\n\n  [key: string]: any;\n\n  constructor({name, collectionName, attributes, methods}:\n    {\n      name: string,\n      collectionName: string,\n      attributes: Attribute[],\n      methods: {entity: string[], collection: string[], dataClass: string[]}\n    }) {\n\n    this.name = name;\n    this.collectionName = collectionName;\n    this.attributes = attributes;\n    this.methods = methods;\n  }\n}\n\nexport class Attribute {\n\n  public name: string;\n  public type: string;\n  public readOnly: boolean;\n  public kind: string;\n  public simpleDate: boolean;\n\n  constructor({name, type, readOnly, kind, simpleDate}:\n   {name: string, type: string, readOnly?: boolean, kind: string, simpleDate?: boolean}) {\n\n    this.name = name;\n    this.type = type;\n    this.readOnly = readOnly === true;\n    this.kind = kind;\n    this.simpleDate = simpleDate;\n  }\n}\n\nexport class AttributeRelated extends Attribute {\n\n}\n\nexport class AttributeCollection extends Attribute {\n\n  public entityType: string;\n\n  constructor({name, type, readOnly, kind, entityType}:\n    {name: string, type: string, readOnly?: boolean, kind: string, entityType: string}) {\n\n    super({name, type, readOnly, kind});\n    this.entityType = entityType;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/presentation/dataclass.ts","import AbstractBusiness from './abstract-business';\nimport EntityBusiness from './entity-business';\nimport DataClassService from '../data-access/service/dataclass-service';\nimport CollectionBusiness from './collection-business';\nimport MediaBusiness from './media-business';\nimport Entity from '../presentation/entity';\nimport Collection from '../presentation/collection';\nimport {AttributeRelated, AttributeCollection} from '../presentation/dataclass';\nimport Media from '../presentation/media';\nimport Const from '../const';\nimport {ICollectionDBO} from './collection-business';\nimport {DataClass} from '../presentation/dataclass';\nimport {QueryOption} from '../presentation/query-option';\nimport {IEntityDBO} from './entity-business';\nimport {MethodAdapter} from './method-adapter';\nimport WakandaClient from '../wakanda-client';\nimport Util from './util';\n\n\n//This map stores all DataClassBusiness instances of existing dataClasses\nlet _dataClassBusinessMap = new Map<string, DataClassBusiness>();\n\nexport interface IMethodsArray {\n  entity: string[];\n  collection: string[];\n  dataClass: string[];\n}\n\nclass DataClassBusiness extends AbstractBusiness {\n\n  public dataClass: DataClass;\n  public methods: IMethodsArray;\n  public _dataClassBusinessMap: Map<string, DataClassBusiness>;\n  public dataURI: string;\n\n  private service: DataClassService;\n\n  constructor({wakJSC, dataClass, methods, dataURI}:\n  {wakJSC: WakandaClient, dataClass: DataClass, methods: IMethodsArray, dataURI: string}) {\n    super({wakJSC});\n\n    this.dataClass = dataClass;\n    this.methods = methods;\n    this.service = new DataClassService({\n      wakJSC: this.wakJSC,\n      dataClassBusiness: this\n    });\n    this.dataURI = dataURI;\n\n    _dataClassBusinessMap.set(dataClass.name, this);\n    this._dataClassBusinessMap = _dataClassBusinessMap;\n  }\n\n  public _decorateDataClass() {\n    //Do not forget to bind(this) to have \"this\" pointing on business instance\n    //instead of given dataclass instance\n    this.dataClass.find    = this.find.bind(this);\n    this.dataClass.query   = this.query.bind(this);\n    this.dataClass.create  = this.create.bind(this);\n\n    this._addUserDefinedMethods();\n  }\n\n  private _addUserDefinedMethods() {\n    let self = this;\n\n    this.methods.dataClass.forEach(method => {\n      //Voluntary don't use fat arrow notation to use arguments object without a bug\n      this.dataClass[method] = function() {\n        let params = Array.from(arguments);\n        return self.callMethod(method, params);\n      };\n    });\n  }\n\n  public callMethod(methodName: string, parameters: any[]): Promise<Entity|Collection|any> {\n    return this.service.callMethod(methodName, parameters)\n      .then(obj => {\n        return MethodAdapter.transform(obj, this._dataClassBusinessMap);\n      });\n  }\n\n  public find(id: string|number, options?: QueryOption): Promise<Entity> {\n    let opt = options || {};\n\n    if (opt.filter !== undefined || opt.params !== undefined || opt.pageSize !== undefined ||\n      opt.start !== undefined || opt.orderBy !== undefined) {\n      throw new Error('Dataclass.find: options filter, params, pageSize, start and orderBy are not allowed');\n    }\n\n    return this.service.find(id, opt).then(entity => {\n      return this._presentationEntityFromDbo({\n        dbo: entity\n      });\n    });\n  }\n\n  public query(options?: QueryOption): Promise<Collection> {\n    let opt = options || {};\n    let initialSelect = opt.select;\n\n    if (opt.method && opt.method.length > 0) {\n      throw new Error('Dataclass.query: option method is not allowed');\n    }\n\n    if (!opt.pageSize) {\n      opt.pageSize = Const.DEFAULT_PAGE_SIZE;\n    }\n\n    return this.service.query(opt).then(collection => {\n      return this._presentationCollectionFromDbo({\n        dbo: collection,\n        pageSize: opt.pageSize,\n        initialSelect\n      });\n    });\n  }\n\n  public create(pojo?: any): Entity {\n    let entityToAttach: any = {};\n\n    if (pojo) {\n      for (let prop in pojo) {\n        if (pojo[prop] instanceof Entity) {\n          entityToAttach[prop] = pojo[prop];\n          delete pojo[prop];\n        }\n      }\n    }\n\n    let entity = this._presentationEntityFromDbo({\n      dbo: pojo || {}\n    });\n\n    for (let prop in entityToAttach) {\n      if (Object.prototype.hasOwnProperty.call(entityToAttach, prop)) {\n        entity[prop] = entityToAttach[prop];\n      }\n    }\n\n    return entity;\n  }\n\n  private _createEntity({key, deferred, dbo}: {key: string, deferred?: boolean, dbo?: IEntityDBO}): Entity {\n\n    let entity = new Entity({\n      key,\n      deferred,\n      dataClass: this.dataClass\n    });\n    let business = new EntityBusiness({\n      wakJSC: this.wakJSC,\n      dataClass: this.dataClass,\n      entity,\n      dataClassBusiness: this\n    });\n    business._decorateEntity();\n\n    if (!deferred) {\n      this._populateEntityDataFromDbo({\n        dbo: dbo,\n        entity: entity\n      });\n      business._flashEntityValues();\n    }\n    return entity;\n  }\n\n  private _createCollection({uri, deferred, pageSize, initialSelect}:\n    {uri: string, deferred?: boolean, pageSize?: number, initialSelect?: string}): Collection {\n\n    let collection = new Collection({\n        deferred: deferred,\n        dataClass: this.dataClass\n      });\n    let business = new CollectionBusiness({\n      wakJSC: this.wakJSC,\n      dataClass: this.dataClass,\n      dataClassBusiness: this,\n      collection,\n      collectionUri: uri,\n      pageSize,\n      initialSelect\n    });\n    business._decorateCollection();\n\n    return collection;\n  }\n\n  public _createMedia({uri, isImage, attributeName, entity}:\n   {uri: string, isImage: boolean, attributeName: string, entity: Entity}): Media {\n\n    let media = new Media({uri});\n    let business = new MediaBusiness({\n      wakJSC: this.wakJSC,\n      media,\n      dataClassBusiness: this,\n      isImage,\n      attributeName,\n      entity\n    });\n\n    business._decorateMedia();\n\n    return media;\n  }\n\n  private _populateEntityDataFromDbo({dbo, entity}: {dbo: IEntityDBO, entity: Entity}): Entity {\n      entity._stamp = dbo.__STAMP;\n      for (let attr of this.dataClass.attributes) {\n\n        let dboAttribute = dbo[attr.name];\n\n        if (dboAttribute !== null && dboAttribute !== undefined) {\n          if (attr instanceof AttributeRelated) {\n            //Kind of recursive call with a potententialy different instance of\n            //DataClassBusiness\n            let business = _dataClassBusinessMap.get(attr.type);\n            entity[attr.name] = business._presentationEntityFromDbo({\n              dbo: dboAttribute\n            });\n          }\n          else if (attr instanceof AttributeCollection) {\n            let business = _dataClassBusinessMap.get(attr.entityType);\n            entity[attr.name] = business._presentationCollectionFromDbo({\n              dbo: dboAttribute\n            });\n          }\n          else if (attr.type === 'image' || attr.type === 'blob') {\n            let uri: string;\n\n            if (dboAttribute && dboAttribute.__deferred && dboAttribute.__deferred.uri) {\n              uri = dboAttribute.__deferred.uri;\n            }\n            else {\n              uri = null;\n            }\n            entity[attr.name] = this._createMedia({\n              uri,\n              isImage: attr.type === 'image',\n              attributeName: attr.name,\n              entity\n            });\n          }\n          else if (attr.type === 'date') {\n            if (!dboAttribute) {\n              entity[attr.name] = null;\n            } else {\n              entity[attr.name] = attr.simpleDate ? Util.wakParseSimpleDate(dboAttribute) : new Date(dboAttribute);\n            }\n          }\n          else {\n            entity[attr.name] = dboAttribute;\n          }\n        }\n        else {\n          //Even if the property is null, we need a media for this kind of attributes\n          //to handle the upload part\n          if (attr.type === 'image' || attr.type === 'blob') {\n            entity[attr.name] = this._createMedia({\n              uri: null,\n              isImage: attr.type === 'image',\n              attributeName: attr.name,\n              entity\n            });\n          }\n          else {\n            entity[attr.name] = null;\n          }\n        }\n      }\n      return entity;\n  }\n\n  public _presentationEntityFromDbo({dbo}: {dbo: IEntityDBO}): Entity {\n    let entity: Entity;\n\n    if (!dbo) {\n      entity = null;\n    }\n    if (dbo.__deferred) {\n      entity = this._createEntity({\n        key: dbo.__deferred.__KEY,\n        deferred: true\n      });\n    }\n    else {\n      entity = this._createEntity({\n        key: dbo.__KEY,\n        dbo: dbo\n      });\n    }\n\n    return entity;\n  }\n\n  public _presentationCollectionFromDbo({dbo, pageSize, initialSelect}:\n    {dbo: ICollectionDBO, pageSize?: number, initialSelect?: string}): Collection {\n\n    let collection: Collection;\n\n    if (!dbo) {\n      collection = null;\n    }\n    else if (dbo.__deferred) {\n      collection = this._createCollection({\n        deferred: true,\n        uri: dbo.__deferred.uri\n      });\n    }\n    else {\n      collection = this._createCollection({\n        uri: dbo.__ENTITYSET,\n        pageSize: pageSize || dbo.__ENTITIES.length,\n        initialSelect\n      });\n      collection._count     = dbo.__COUNT;\n      collection._first     = dbo.__FIRST;\n      collection._sent      = dbo.__SENT;\n      collection._pageSize  = pageSize;\n\n      for (let dboEntity of dbo.__ENTITIES) {\n        collection.entities.push(this._presentationEntityFromDbo({\n          dbo: dboEntity\n        }));\n      }\n    }\n\n    return collection;\n  }\n}\n\nexport default DataClassBusiness;\n\n\n\n// WEBPACK FOOTER //\n// ./src/business/dataclass-business.ts","import AbstractBusiness from './abstract-business';\nimport EntityService from '../data-access/service/entity-service';\nimport {AttributeRelated, AttributeCollection} from '../presentation/dataclass';\nimport Entity from '../presentation/entity';\nimport {DataClass} from '../presentation/dataclass';\nimport DataClassBusiness from './dataclass-business';\nimport {QueryOption} from '../presentation/query-option';\nimport {MethodAdapter} from './method-adapter';\nimport WakandaClient from '../wakanda-client';\nimport Media from '../presentation/media';\nimport Util from './util';\n\n\nexport interface IEntityDBO {\n  __KEY?: string;\n  __STAMP?: number;\n  __deferred?: {uri: string, __KEY: string};\n\n  [key: string]: any;\n}\n\nclass EntityBusiness extends AbstractBusiness {\n\n  private entity: Entity;\n  private dataClass: DataClass;\n  private dataClassBusiness: DataClassBusiness;\n  private service: EntityService;\n  private _oldEntityValues: IEntityDBO;\n\n  constructor({wakJSC, entity, dataClass, dataClassBusiness}:\n  {wakJSC: WakandaClient, entity: Entity, dataClass: DataClass, dataClassBusiness: DataClassBusiness}) {\n    super({wakJSC});\n\n    this.entity = entity;\n    this.dataClass = dataClass;\n    this.dataClassBusiness = dataClassBusiness;\n    this.service = new EntityService({\n      wakJSC,\n      entity,\n      dataClassBusiness\n    });\n  }\n\n  public _decorateEntity() {\n    this.entity.save        = this.save.bind(this);\n    this.entity.delete      = this.delete.bind(this);\n    this.entity.fetch       = this.fetch.bind(this);\n    this.entity.recompute   = this.recompute.bind(this);\n\n    this._addUserDefinedMethods();\n  }\n\n  public _flashEntityValues(): void {\n    let data: IEntityDBO = {};\n    let entity = this.entity;\n\n    for (let attr of this.dataClass.attributes) {\n      let objAttr = entity[attr.name];\n\n      if (attr instanceof AttributeCollection) {\n        continue;\n      }\n\n      if (attr instanceof AttributeRelated) {\n        data[attr.name] = objAttr ? objAttr._key : null;\n      } else {\n        switch (attr.type) {\n          case 'image':\n          case 'blob':\n            data[attr.name] = { uri: objAttr.uri };\n            break;\n          case 'object':\n            data[attr.name] = JSON.stringify(objAttr);\n            break;\n          case 'date':\n            if (!objAttr) {\n              data[attr.name] = null;\n            } else {\n              data[attr.name] = attr.simpleDate ? Util.wakToStringSimpleDate(objAttr) : objAttr.toJSON();\n            }\n            break;\n          default:\n            data[attr.name] = objAttr;\n        }\n      }\n    }\n\n    this._oldEntityValues = data;\n  }\n\n  private _addUserDefinedMethods() {\n    let self = this;\n    this.dataClassBusiness.methods.entity.forEach(method => {\n      //Voluntary don't use fat arrow notation to use arguments object without a bug\n      this.entity[method] = function() {\n        let params = Array.from(arguments);\n        return self.callMethod(method, params);\n      };\n    });\n  }\n\n  public fetch(options?: QueryOption): Promise<Entity> {\n    let opt = options || {};\n\n    if (opt.filter !== undefined || opt.params !== undefined || opt.pageSize !== undefined ||\n      opt.start !== undefined || opt.orderBy !== undefined) {\n      throw new Error('Entity.fetch: options filter, params, pageSize, start and orderBy are not allowed');\n    }\n\n    return this.dataClassBusiness.find(this.entity._key, options).then(fresherEntity => {\n      this._refreshEntity({fresherEntity});\n      this._flashEntityValues();\n      return this.entity;\n    });\n  }\n\n  public callMethod(methodName: string, parameters: any[]): Promise<any> {\n    if (!this.entity._key) {\n      throw new Error('Entity.' + methodName + ': can not be called on an unsaved entity');\n    }\n\n    return this.service.callMethod(methodName, parameters)\n    .then(obj => {\n\n      return MethodAdapter.transform(obj, this.dataClassBusiness._dataClassBusinessMap);\n    });\n  }\n\n  public delete(): Promise<void> {\n    if (!this.entity._key) {\n      throw new Error('Entity.delete: can not delete unsaved entity');\n    }\n\n    return this.service.delete().then(() => {\n      this.entity = null;\n    });\n  }\n\n  public save(): Promise<Entity> {\n    let data = this.prepareDataForSave();\n\n    //If first-level related entities were already expanded, we will save the\n    //entity and ask the server to expand theses attributes on its response\n    //So, the user keeps its entities expanded\n    let expand = this._getExpandString();\n\n    return this.service.save(data, expand).then(entityDbo => {\n      let fresherEntity = this.dataClassBusiness._presentationEntityFromDbo({\n        dbo: entityDbo\n      });\n\n      this._refreshEntity({fresherEntity});\n      this._flashEntityValues();\n      return this.entity;\n    });\n  }\n\n  public recompute(): Promise<Entity> {\n    let data = this.prepareDataForSave();\n\n    return this.service.recompute(data)\n      .then(dbo => {\n        let fresherEntity = this.dataClassBusiness._presentationEntityFromDbo({\n          dbo\n        });\n\n        this._refreshEntity({fresherEntity});\n        return this.entity;\n      });\n  }\n\n  private prepareDataForSave(): IEntityDBO {\n    let data: IEntityDBO = {};\n    let entityIsNew = false;\n\n    if (this.entity._key && this.entity._stamp) {\n      data.__KEY   = this.entity._key;\n      data.__STAMP = this.entity._stamp;\n    }\n    else {\n      entityIsNew = true;\n    }\n\n    for (let attr of this.dataClass.attributes) {\n      let objAttr = this.entity[attr.name];\n\n      if (objAttr === undefined) {\n        objAttr = null;\n      }\n\n      if (attr instanceof AttributeRelated) {\n        data[attr.name] = objAttr ? objAttr._key : null;\n      }\n      else if (attr.readOnly) {\n        continue;\n      }\n      else if (attr.type === 'date') {\n        if (! objAttr) {\n          data[attr.name] = objAttr;\n        } else {\n          data[attr.name] = attr.simpleDate ? Util.wakToStringSimpleDate(objAttr) : objAttr.toJSON();\n        }\n      }\n      else if (!(attr instanceof AttributeCollection)) {\n        //Don't send null value for a newly created attribute (to don't override value eventually set on init event)\n        //except for ID (which is null), because if an empty object is send, save is ignored\n        if (!entityIsNew || objAttr !== null || attr.name === 'ID') {\n          data[attr.name] = objAttr;\n        }\n      }\n    }\n\n    if (!entityIsNew) {\n      let oldData = this._oldEntityValues || {};\n      for (let attr of this.dataClass.attributes) {\n        if (data[attr.name] === undefined || attr.name === 'ID') {\n          continue;\n        }\n\n        switch (attr.type) {\n          case 'image':\n          case 'blob':\n            if (data[attr.name].uri === oldData[attr.name].uri) {\n              delete data[attr.name];\n            }\n            break;\n          case 'object':\n            if (JSON.stringify(data[attr.name]) === oldData[attr.name]) {\n              delete data[attr.name];\n            }\n            break;\n          default:\n            if (data[attr.name] === oldData[attr.name]) {\n              delete data[attr.name];\n            }\n        }\n      }\n    }\n\n    return data;\n  }\n\n  private _refreshEntity({fresherEntity}: {fresherEntity: Entity}) {\n    for (let prop in fresherEntity) {\n      if (fresherEntity.hasOwnProperty(prop) && (typeof fresherEntity[prop] !== 'function')) {\n        if (fresherEntity[prop] instanceof Media) {\n          this.entity[prop].uri = fresherEntity[prop].uri;\n        } else {\n          this.entity[prop] = fresherEntity[prop];\n        }\n      }\n    }\n  }\n\n  private _getExpandString(): string {\n    let expand = '';\n    for (let attr of this.dataClass.attributes) {\n      if (attr instanceof AttributeRelated || attr instanceof AttributeCollection) {\n        if (this.entity[attr.name] instanceof Entity && !this.entity[attr.name]._deferred) {\n          expand += attr.name + ',';\n        }\n      }\n    }\n\n    return expand.length > 0 ? expand.slice(0, -1) : null;\n  }\n}\n\nexport default EntityBusiness;\n\n\n\n// WEBPACK FOOTER //\n// ./src/business/entity-business.ts","import AbstractService from './abstract-service';\nimport Entity from '../../presentation/entity';\nimport DataClassBusiness from '../../business/dataclass-business';\nimport {IEntityDBO} from '../../business/entity-business';\nimport {EntityBaseService} from './base/entity-base-service';\nimport WakandaClient from '../../wakanda-client';\n\nclass EntityService extends AbstractService {\n\n  private entity: Entity;\n  private dataClassBusiness: DataClassBusiness;\n\n  constructor({wakJSC, entity, dataClassBusiness}:\n  {wakJSC: WakandaClient, entity: Entity, dataClassBusiness: DataClassBusiness}) {\n    super({wakJSC});\n\n    this.entity = entity;\n    this.dataClassBusiness = dataClassBusiness;\n  }\n\n  public save(data: IEntityDBO, expand: string) {\n    return EntityBaseService.save({\n      httpClient: this.httpClient,\n      dataURI: this.dataClassBusiness.dataURI,\n      expand,\n      data\n    });\n  }\n\n  public recompute(data: IEntityDBO) {\n   return EntityBaseService.recompute({\n      httpClient: this.httpClient,\n      dataURI: this.dataClassBusiness.dataURI,\n      data\n    });\n  }\n\n  public callMethod(methodName: string, parameters: any[]) {\n    return EntityBaseService.callMethod({\n      httpClient: this.httpClient,\n      dataURI: this.dataClassBusiness.dataURI,\n      methodName,\n      parameters,\n      entityKey: this.entity._key\n    });\n  }\n\n  public delete() {\n    return EntityBaseService.delete({\n      httpClient: this.httpClient,\n      dataURI: this.dataClassBusiness.dataURI,\n      entityKey: this.entity._key\n    });\n  }\n}\n\nexport default EntityService;\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/service/entity-service.ts","import HttpClient from '../../http/http-client';\nimport {IEntityDBO} from '../../../business/entity-business';\nimport Util from '../../util';\n\nexport interface ISaveParams {\n  httpClient: HttpClient;\n  data: IEntityDBO;\n  expand: string;\n  dataURI: string;\n}\n\nexport interface IRecomputeParams {\n  httpClient: HttpClient;\n  data: IEntityDBO;\n  dataURI: string;\n}\n\nexport interface ICallMethodParams {\n  httpClient: HttpClient;\n  dataURI: string;\n  methodName: string;\n  parameters: any[];\n  entityKey: string;\n}\n\nexport interface IDeleteParams {\n  httpClient: HttpClient;\n  entityKey: string;\n  dataURI: string;\n}\n\nexport class EntityBaseService {\n\n  public static save({httpClient, data, expand, dataURI}: ISaveParams) {\n\n    let expandStr = '';\n    if (expand) {\n      expandStr = '&$expand=' + expand;\n    }\n\n    return httpClient.post({\n      uri: dataURI + '?$method=update' + expandStr,\n      data\n    }).then(res => {\n      let entity = JSON.parse(res.body);\n      delete entity.__entityModel;\n      Util.removeRestInfoFromEntity(entity);\n\n      return entity as IEntityDBO;\n    });\n  }\n\n  public static recompute({httpClient, dataURI, data}: IRecomputeParams) {\n\n    return httpClient.post({\n      uri: dataURI + '?$method=update&$refresh=true',\n      data\n    }).then(res => {\n      let dbo = JSON.parse(res.body);\n      delete dbo.__entityModel;\n      Util.removeRestInfoFromEntity(dbo);\n\n      return dbo as IEntityDBO;\n    });\n  }\n\n  public static callMethod({httpClient, dataURI, methodName, parameters, entityKey}: ICallMethodParams) {\n\n    return httpClient.post({\n      uri: dataURI + '(' + entityKey + ')/' + methodName,\n      data: parameters\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n      return obj.result || obj || null;\n    });\n  }\n\n  public static delete({httpClient, dataURI, entityKey}: IDeleteParams): Promise<boolean> {\n\n    return httpClient.post({\n      uri: dataURI + '(' + entityKey + ')?$method=delete'\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n\n      if (!(obj && obj.ok === true)) {\n        return <any>Promise.reject(new Error());\n      }\n      else {\n        return true;\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/service/base/entity-base-service.ts","import {QueryOption} from '../presentation/query-option';\n\nclass Util {\n  public static handleOptions(options: QueryOption) {\n\n    if (!options) {\n      return '';\n    }\n\n    let {\n      select,\n      filter,\n      params,\n      pageSize,\n      start,\n      orderBy,\n      method,\n      emMethod\n    } = options;\n\n    let ret = '?';\n\n    if (select) {\n      ret += '&$expand=' + select;\n    }\n\n    if (filter) {\n      ret += '&$filter=\\\"' + filter + '\\\"';\n    }\n\n    if (orderBy) {\n      ret += '&$orderby=' + orderBy;\n    }\n\n    if (params) {\n      if (!Array.isArray(params)) {\n        throw new Error('params option must be an array');\n      }\n\n      if (params.length > 0) {\n        let p = '[';\n\n        for (let elt of params) {\n          if (typeof elt === 'string') {\n            p += '\\\"' + elt + '\\\",';\n          }\n          else {\n            p += elt + ',';\n          }\n        }\n\n        p   = p.slice(0, -1);\n        p   += ']';\n        ret += '&$params=\\'' + p + '\\'';\n      }\n    }\n\n    if (pageSize) {\n      if (!this.isInteger(pageSize)) {\n        throw new Error('pageSize option must be an integer');\n      }\n\n      ret += '&$limit=' + pageSize;\n    }\n\n    if (start) {\n      if (!this.isInteger(start)) {\n        throw new Error('start option must be an integer');\n      }\n\n      ret += '&$skip=' + start;\n    }\n\n    if (method) {\n      ret += '&$method=' + method;\n    }\n\n    if (emMethod) {\n      ret += '&$emMethod=' + emMethod;\n    }\n\n    if (ret.length > 1 && ret[1] === '&') {\n      ret = ret.replace('?&', '?');\n    }\n\n    return ret === '?' ? '' : ret;\n  }\n\n  public static isInteger(n: any): boolean {\n    return typeof n === 'number' && !isNaN(n) && (n % 1) === 0;\n  }\n\n  public static removeRestInfoFromEntity(entity: any): void {\n    for (let prop in entity) {\n      if (Object.prototype.hasOwnProperty.call(entity, prop)) {\n        let p = entity[prop];\n        if (p && p.__deferred && p.__deferred.__KEY) { //Do not remove uri for collection\n          delete p.__deferred.uri;\n        }\n      }\n    }\n  }\n}\n\nexport default Util;\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/util.ts","import {DataClass} from './dataclass';\nimport {QueryOption} from './query-option';\n\nclass Entity {\n\n  public _key: string;\n  public _stamp: number;\n  public _deferred: boolean;\n  public _dataClass: DataClass;\n\n  [key: string]: any;\n\n  public save: () => Promise<Entity>;\n  public delete: () => Promise<void>;\n  public fetch: (options?: QueryOption) => Promise<Entity>;\n  public recompute: () => Promise<Entity>;\n\n  constructor({key: entityKey, deferred, dataClass}:\n   {key: string, deferred: boolean, dataClass: DataClass}) {\n\n    this._key = entityKey;\n    this._deferred = deferred === true;\n\n    Object.defineProperty(this, '_dataClass', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: dataClass\n    });\n  }\n}\n\nexport default Entity;\n\n\n\n// WEBPACK FOOTER //\n// ./src/presentation/entity.ts","import DataClassBusiness from './dataclass-business';\n\nexport class MethodAdapter {\n\n  public static transform(object: any, dcBusinessMap: Map<string, DataClassBusiness>): any {\n    if (object && object.__entityModel) {\n      let business = dcBusinessMap.get(object.__entityModel);\n\n      if (business) {\n        //Returned object is a collection\n        if (typeof object.__COUNT !== 'undefined' &&\n            typeof object.__ENTITIES !== 'undefined' &&\n            typeof object.__FIRST !== 'undefined' &&\n            typeof object.__SENT !== 'undefined') {\n          return business._presentationCollectionFromDbo({\n            dbo: object\n          });\n        }\n        //Returned object is an entity\n        else if (object.__KEY && object.__STAMP) {\n          return business._presentationEntityFromDbo({\n            dbo: object\n          });\n        }\n      }\n    }\n\n    return object;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/business/method-adapter.ts","import Entity from './entity';\n\nclass Media {\n\n  public uri: string;\n\n  public upload: (file: any, mimeType?: string) => Promise<Entity>;\n  public delete: () => Promise<Entity>;\n\n  constructor({uri}: {uri: string}) {\n    this.uri = uri;\n  }\n}\n\nexport default Media;\n\n\n\n// WEBPACK FOOTER //\n// ./src/presentation/media.ts","class Util {\n\n  public static wakParseSimpleDate(stringDate: string): Date {\n    // In wakanda, simple date is a date with only year, month and hour\n    // in this format : DD!MM!YYYY\n    if (!stringDate) {\n      return null;\n    }\n\n    let arr = stringDate.split('!');\n    if (arr.length !== 3) {\n      // return null or throw an error, simple date format is ko\n      return null;\n    }\n    let date: Date = new Date(Date.UTC(parseInt(arr[2], 10), parseInt(arr[1], 10) - 1, parseInt(arr[0], 10)));\n    return date;\n  }\n\n  public static wakToStringSimpleDate(date: Date): String {\n    let wakSimpleDate: String;\n\n    if (!(date instanceof Date)) {\n      return null;\n    }\n\n    wakSimpleDate = date.getUTCDate() + '!' + (date.getUTCMonth() + 1) + '!' + date.getUTCFullYear();\n    return wakSimpleDate;\n  }\n}\n\nexport default Util;\n\n\n\n// WEBPACK FOOTER //\n// ./src/business/util.ts","import AbstractService from './abstract-service';\nimport {QueryOption} from '../../presentation/query-option';\nimport DataClassBusiness from '../../business/dataclass-business';\nimport {IEntityDBO} from '../../business/entity-business';\nimport {ICollectionDBO} from '../../business/collection-business';\nimport {DataClassBaseService} from './base/dataclass-base-service';\nimport WakandaClient from '../../wakanda-client';\n\nclass DataClassService extends AbstractService {\n\n  private dataClassBusiness: DataClassBusiness;\n\n  constructor({wakJSC, dataClassBusiness}: {wakJSC: WakandaClient, dataClassBusiness: DataClassBusiness}) {\n    super({wakJSC});\n\n    this.dataClassBusiness = dataClassBusiness;\n  }\n\n  public find(id: string|number, options: QueryOption): Promise<IEntityDBO> {\n    return DataClassBaseService.find({\n      httpClient: this.httpClient,\n      key: id,\n      options,\n      dataURI: this.dataClassBusiness.dataURI\n    });\n  }\n\n  public query(options: QueryOption): Promise<ICollectionDBO> {\n    return DataClassBaseService.query({\n      httpClient: this.httpClient,\n      options,\n      dataURI: this.dataClassBusiness.dataURI\n    });\n  }\n\n  public callMethod(methodName: string, parameters: any[]): Promise<any> {\n    return DataClassBaseService.callMethod({\n      httpClient: this.httpClient,\n      dataURI: this.dataClassBusiness.dataURI,\n      methodName,\n      parameters\n    });\n  }\n}\n\nexport default DataClassService;\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/service/dataclass-service.ts","import HttpClient from '../../http/http-client';\nimport {QueryOption} from '../../../presentation/query-option';\nimport {IEntityDBO} from '../../../business/entity-business';\nimport {ICollectionDBO} from '../../../business/collection-business';\nimport Util from '../../util';\n\nexport interface IFindParams {\n  httpClient: HttpClient;\n  key: number|string;\n  options: QueryOption;\n  dataURI: string;\n}\n\nexport interface IQueryParams {\n  httpClient: HttpClient;\n  options: QueryOption;\n  dataURI: string;\n}\n\nexport interface ICallMethodParams {\n  httpClient: HttpClient;\n  methodName: string;\n  parameters: any[];\n  dataURI: string;\n}\n\nexport class DataClassBaseService {\n\n  public static find({httpClient, key, options, dataURI}: IFindParams) {\n\n    if (typeof key !== 'string' && typeof key !== 'number') {\n      throw new Error('DataClass.find: Invalid id type');\n    }\n\n    let optString = Util.handleOptions(options);\n\n    return httpClient.get({\n      uri: dataURI + '(' + key + ')' + optString\n    })\n      .then(res => {\n        let entity = JSON.parse(res.body);\n        delete entity.__entityModel;\n\n        Util.removeRestInfoFromEntity(entity);\n\n        return entity as IEntityDBO;\n      });\n  }\n\n  public static query({httpClient, options, dataURI}: IQueryParams) {\n\n    options.method = 'entityset';\n\n    if (Array.isArray(options.params)) {\n      options.params = this._sanitizeOptionParams(options.params);\n    }\n\n    let optString = Util.handleOptions(options);\n\n    return httpClient.get({\n      uri: dataURI + optString\n    }).then(res => {\n      let collection = JSON.parse(res.body);\n      delete collection.__entityModel;\n\n      for (let entity of collection.__ENTITIES) {\n        Util.removeRestInfoFromEntity(entity);\n      }\n\n      return collection as ICollectionDBO;\n    });\n  }\n\n  public static callMethod({httpClient, methodName, parameters, dataURI}: ICallMethodParams) {\n\n    return httpClient.post({\n      uri: dataURI + '/' + methodName,\n      data: parameters\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n      return obj.result || obj || null;\n    });\n  }\n\n  private static _sanitizeOptionParams(params: any[]): any[] {\n    return params.map(element => {\n      if (element instanceof Date) {\n        return element.toISOString();\n      }\n      else {\n        return element;\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/service/base/dataclass-base-service.ts","import AbstractBusiness from './abstract-business';\nimport CollectionService from '../data-access/service/collection-service';\nimport Const from '../const';\nimport {IEntityDBO} from './entity-business';\nimport Collection from '../presentation/collection';\nimport {DataClass} from '../presentation/dataclass';\nimport DataClassBusiness from './dataclass-business';\nimport {QueryOption} from '../presentation/query-option';\nimport {MethodAdapter} from './method-adapter';\nimport WakandaClient from '../wakanda-client';\n\nexport interface ICollectionDBO {\n  __ENTITYSET: string;\n  __COUNT: number;\n  __FIRST: number;\n  __SENT: number;\n  __ENTITIES: IEntityDBO[];\n  __deferred: {uri: string};\n\n  [key: string]: any;\n}\n\nexport interface ICollectionBusinessConstructor {\n  wakJSC: WakandaClient;\n  dataClass: DataClass;\n  collection: Collection;\n  dataClassBusiness: DataClassBusiness;\n  collectionUri: string;\n  pageSize: number;\n  initialSelect: string;\n}\n\nclass CollectionBusiness extends AbstractBusiness {\n\n  private collection: Collection;\n  private dataClass: DataClass;\n  private dataClassBusiness: DataClassBusiness;\n  private service: CollectionService;\n  private pageSize: number;\n  private initialSelect: string;\n\n  constructor({wakJSC, dataClass, collection, dataClassBusiness, collectionUri, pageSize, initialSelect}: ICollectionBusinessConstructor) {\n    super({wakJSC});\n\n    this.collection = collection;\n    this.dataClass = dataClass;\n    this.dataClassBusiness = dataClassBusiness;\n    this.service = new CollectionService({\n      wakJSC,\n      collection,\n      dataClassBusiness,\n      collectionUri\n    });\n    this.pageSize = pageSize;\n    this.initialSelect = initialSelect;\n  }\n\n  public _decorateCollection() {\n    this.collection.fetch = this.fetch.bind(this);\n    this.collection.nextPage = this.nextPage.bind(this);\n    this.collection.prevPage = this.prevPage.bind(this);\n    this.collection.more = this.more.bind(this);\n\n    this._addUserDefinedMethods();\n  }\n\n  public fetch(options?: QueryOption): Promise<Collection> {\n    let opt = options || {};\n\n    if (opt.method && opt.method.length > 0) {\n      throw new Error('Collection.fetch: option method is not allowed');\n    }\n\n    if (!opt.pageSize) {\n      opt.pageSize = this.pageSize ? this.pageSize : Const.DEFAULT_PAGE_SIZE;\n    }\n\n    if (opt.select) {\n      this.initialSelect = opt.select;\n    }\n\n    this.pageSize = opt.pageSize;\n\n    return this.service.fetch(opt).then(collectionDBO => {\n      let fresherCollection = this.dataClassBusiness._presentationCollectionFromDbo({\n        dbo: collectionDBO,\n        pageSize: this.pageSize\n      });\n\n      this._refreshCollection({fresherCollection});\n      return this.collection;\n    });\n  }\n\n  public more(): Promise<Collection> {\n\n    if (this.collection._deferred === true) {\n      throw new Error('Collection.more: can not call more on a deferred collection');\n    }\n\n    let options: QueryOption = {\n      start: this.collection._first + this.collection._sent,\n      pageSize: this.pageSize\n    };\n\n    if (this.initialSelect) {\n      options.select = this.initialSelect;\n    }\n\n    return this.service.fetch(options)\n      .then(dbo => {\n        this.collection._sent += dbo.__ENTITIES.length;\n\n        for (let entity of dbo.__ENTITIES) {\n          this.collection.entities.push(this.dataClassBusiness._presentationEntityFromDbo({\n            dbo: entity\n          }));\n        }\n\n        return this.collection;\n      });\n  }\n\n  public nextPage(): Promise<Collection> {\n\n    if (this.collection._deferred === true) {\n      throw new Error('Collection.nextPage: can not call nextPage on a deferred collection');\n    }\n\n    let options: QueryOption = {\n      start: this.collection._first + this.pageSize,\n      pageSize: this.pageSize\n    };\n\n    if (this.initialSelect) {\n      options.select = this.initialSelect;\n    }\n\n    return this.fetch(options);\n  }\n\n  public prevPage(): Promise<Collection> {\n\n    if (this.collection._deferred === true) {\n      throw new Error('Collection.prevPage: can not call prevPage on a deferred collection');\n    }\n\n    let options: QueryOption = {\n      start: this.collection._first - this.pageSize,\n      pageSize: this.pageSize\n    };\n\n    if (this.initialSelect) {\n      options.select = this.initialSelect;\n    }\n\n    return this.fetch(options);\n  }\n\n  private _addUserDefinedMethods() {\n    let self = this;\n    this.dataClassBusiness.methods.collection.forEach(method => {\n      //Voluntary don't use fat arrow notation to use arguments object without a bug\n      this.collection[method] = function() {\n        let params = Array.from(arguments);\n        return self.callMethod(method, params);\n      };\n    });\n  }\n\n  public callMethod(methodName: string, parameters: any[]) {\n    if (this.collection._deferred) {\n      throw new Error('Collection.' + methodName + ': can not be called on a deferred collection');\n    }\n\n    return this.service.callMethod(methodName, parameters)\n      .then((obj: any) => {\n        return MethodAdapter.transform(obj, this.dataClassBusiness._dataClassBusinessMap);\n      });\n  }\n\n  private _refreshCollection({fresherCollection}: {fresherCollection: Collection}) {\n    for (let prop in fresherCollection) {\n      if (Object.prototype.hasOwnProperty.call(fresherCollection, prop)) {\n        if (typeof fresherCollection[prop] !== 'function') {\n          this.collection[prop] = fresherCollection[prop];\n        }\n      }\n    }\n  }\n}\n\nexport default CollectionBusiness;\n\n\n\n// WEBPACK FOOTER //\n// ./src/business/collection-business.ts","import AbstractService from './abstract-service';\nimport Collection from '../../presentation/collection';\nimport DataClassBusiness from '../../business/dataclass-business';\nimport {QueryOption} from '../../presentation/query-option';\nimport {ICollectionDBO} from '../../business/collection-business';\nimport {CollectionBaseService, isEntitySetUri} from './base/collection-base-service';\nimport WakandaClient from '../../wakanda-client';\n\nclass CollectionService extends AbstractService {\n\n  private collection: Collection;\n  private dataClassBusiness: DataClassBusiness;\n  private collectionUri: string;\n  private isEntitySet: boolean;\n\n  constructor({wakJSC, collection, dataClassBusiness, collectionUri}:\n    {wakJSC: WakandaClient, collection: Collection, dataClassBusiness: DataClassBusiness, collectionUri: string}) {\n    super({wakJSC});\n\n    this.collection = collection;\n    this.dataClassBusiness = dataClassBusiness;\n    this.collectionUri = collectionUri;\n    this.isEntitySet = isEntitySetUri(collectionUri);\n  }\n\n  public fetch(options: QueryOption): Promise<ICollectionDBO> {\n\n    return CollectionBaseService.fetch({\n      httpClient: this.httpClient,\n      collectionUri: this.collectionUri,\n      isEntitySet: this.isEntitySet,\n      options\n    })\n      .then(dbo => {\n\n        if (dbo.__ENTITYSET) {\n          this.collectionUri = dbo.__ENTITYSET;\n          this.isEntitySet = isEntitySetUri(dbo.__ENTITYSET);\n        }\n\n        return dbo;\n      });\n  }\n\n\n  public callMethod(methodName: string, parameters: any[]): Promise<any> {\n    return CollectionBaseService.callMethod({\n      httpClient: this.httpClient,\n      collectionUri: this.collectionUri,\n      isEntitySet: this.isEntitySet,\n      methodName,\n      parameters\n    });\n  }\n}\n\nexport default CollectionService;\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/service/collection-service.ts","import HttpClient from '../../http/http-client';\nimport {QueryOption} from '../../../presentation/query-option';\nimport {ICollectionDBO} from '../../../business/collection-business';\nimport Util from '../../util';\n\nexport interface IBaseParams {\n  httpClient: HttpClient;\n  collectionUri: string;\n  isEntitySet: boolean;\n}\n\nexport interface IFetchParams extends IBaseParams {\n  options: QueryOption;\n}\n\nexport interface ICallMethodParams extends IBaseParams {\n  methodName: string;\n  parameters: any[];\n}\n\nexport class CollectionBaseService {\n\n  public static fetch({httpClient, collectionUri, isEntitySet, options}: IFetchParams) {\n\n    if (!isEntitySet) {\n      if (options.select && options.select.length > 0) {\n        throw new Error('Collection.fetch: option select is not allowed when collection is deferred');\n      }\n    }\n\n    options.method = 'subentityset';\n\n    let optString = Util.handleOptions(options);\n\n    //Remove the first ? on optString if it's not an entitySet (because there is also\n    //?$expand=... on collectionUri), and add a &\n    if (!isEntitySet) {\n      optString = '&' + optString.slice(1);\n    }\n\n    let uri = collectionUri;\n\n    return httpClient.get({\n      uri: uri + optString\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n\n      delete obj.__entityModel;\n\n      for (let entity of obj.__ENTITIES) {\n        Util.removeRestInfoFromEntity(entity);\n      }\n\n      return obj as ICollectionDBO;\n    });\n  }\n\n  public static callMethod({httpClient, collectionUri, isEntitySet, methodName, parameters}: ICallMethodParams) {\n    let uri = collectionUri;\n\n    if (isEntitySet) {\n      uri += '/' + methodName;\n    }\n    else {\n      let optString = Util.handleOptions({\n        method: 'subentityset',\n        emMethod: methodName\n      });\n\n      uri += '&' + optString.slice(1);\n    }\n\n    return httpClient.post({\n        uri,\n        data: parameters\n      }).then((res: any) => {\n        let obj = JSON.parse(res.body);\n        return obj.result || obj || null;\n      });\n  }\n}\n\nexport function isEntitySetUri(uri: string): boolean {\n  return /^\\/rest\\/\\w+\\/\\$entityset\\/[A-Z0-9]+(\\?.*)?$/i.test(uri);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/service/base/collection-base-service.ts","export default {\n  DEFAULT_PAGE_SIZE: 40,\n  DEFAULT_SESSION_DURATION: 3600 //seconds\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/const.ts","import AbstractBusiness from './abstract-business';\nimport MediaService from '../data-access/service/media-service';\nimport Media from '../presentation/media';\nimport Entity from '../presentation/entity';\nimport DataClassBusiness from './dataclass-business';\nimport WakandaClient from '../wakanda-client';\n\nclass MediaBusiness extends AbstractBusiness {\n\n  public entity: Entity;\n  public isImage: boolean;\n\n  private media: Media;\n  private dataClassBusiness: DataClassBusiness;\n  private service: MediaService;\n\n  constructor({wakJSC, media, dataClassBusiness, isImage, attributeName, entity}:\n  {wakJSC: WakandaClient, media: Media, dataClassBusiness: DataClassBusiness, isImage: boolean, attributeName: string, entity: Entity}) {\n    super({wakJSC});\n\n    this.media = media;\n    this.entity = entity;\n    this.dataClassBusiness = dataClassBusiness;\n    this.isImage = isImage === true;\n    this.service = new MediaService({\n      wakJSC,\n      mediaBusiness: this,\n      media,\n      attributeName,\n      dataClassBusiness\n    });\n  }\n\n  public _decorateMedia() {\n    this.media.upload = this.upload.bind(this);\n    this.media.delete = this.delete.bind(this);\n  }\n\n  public upload(file: any): Promise<Entity> {\n\n    if (!this.entity._key) {\n      throw new Error('Media.upload: entity must be saved before uploading a media');\n    }\n\n    return this.service.upload(file, file.type).then(dbo => {\n      return dbo; //FIXME\n    }).then(() => {\n      //FIXME - crappy, force a refresh of the entity to get proper stamp and media uri\n      return this.entity.fetch();\n    });\n  }\n\n  public delete(): Promise<Entity> {\n\n    if (!this.entity._key) {\n      throw new Error('Media.upload: entity must be saved before deleting a media');\n    }\n\n    return this.service.delete().then(() => {\n      //FIXME - crappy, force a refresh of the entity to get proper stamp and media uri\n      return this.entity.fetch();\n    });\n  }\n}\n\nexport default MediaBusiness;\n\n\n\n// WEBPACK FOOTER //\n// ./src/business/media-business.ts","import WakandaClient from '../../wakanda-client';\nimport AbstractService from './abstract-service';\nimport Entity from '../../presentation/entity';\nimport Media from '../../presentation/media';\nimport HttpResponse from '../http/http-response';\nimport {MediaBaseService} from './base/media-base-service';\nimport MediaBusiness from '../../business/media-business';\nimport DataClassBusiness from '../../business/dataclass-business';\n\nclass MediaService extends AbstractService {\n\n  private dataClassName: string;\n  private entity: Entity;\n  private isImage: boolean;\n  private media: Media;\n  private attributeName: string;\n\n  constructor({wakJSC, mediaBusiness, media, attributeName, dataClassBusiness}:\n    {wakJSC: WakandaClient, mediaBusiness: MediaBusiness, media: Media, attributeName: string, dataClassBusiness: DataClassBusiness}) {\n\n    super({wakJSC});\n\n    this.dataClassName = dataClassBusiness.dataClass.name;\n    this.entity = mediaBusiness.entity;\n    this.isImage = mediaBusiness.isImage;\n    this.media = media;\n    this.attributeName = attributeName;\n  }\n\n  public upload(file: any, mimeType: string): Promise<HttpResponse> {\n    return MediaBaseService.upload({\n      httpClient: this.httpClient,\n      dataClassName: this.dataClassName,\n      entityKey: this.entity._key,\n      attributeName: this.attributeName,\n      isImage: this.isImage,\n      file\n    });\n  }\n\n  public delete(): Promise<HttpResponse> {\n    return MediaBaseService.delete({\n      httpClient: this.httpClient,\n      dataClassName: this.dataClassName,\n      entityKey: this.entity._key,\n      entityStamp: this.entity._stamp,\n      attributeName: this.attributeName\n    });\n  }\n}\n\nexport default MediaService;\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/service/media-service.ts","import HttpClient from '../../http/http-client';\nimport HttpResponse from '../../http/http-response';\n\nexport interface IUploadParams {\n  httpClient: HttpClient;\n  dataClassName: string;\n  entityKey: string;\n  attributeName: string;\n  file: File;\n  isImage: boolean;\n}\n\nexport interface IDeleteParams {\n  httpClient: HttpClient;\n  dataClassName: string;\n  entityKey: string;\n  entityStamp: number;\n  attributeName: string;\n}\n\nexport class MediaBaseService {\n\n  public static upload({httpClient, dataClassName, entityKey, attributeName, file, isImage}: IUploadParams): Promise<HttpResponse> {\n\n    let uri = this._buildUri(dataClassName, entityKey, attributeName);\n\n    if (isImage) {\n      uri += '?$rawPict=' + file.type;\n    }\n\n    //FIXME - real crappy not to return some piece of information to refresh entity\n    return httpClient.post({\n      uri,\n      data: file,\n      binary: true\n    });\n  }\n\n  public static delete({httpClient, dataClassName, entityKey, entityStamp, attributeName}: IDeleteParams): Promise<HttpResponse> {\n    let uri = '/' + dataClassName + '(' + entityKey + ')';\n    let data: any = {\n      __KEY: entityKey,\n      __STAMP: entityStamp\n    };\n\n    data[attributeName] = null;\n\n    //FIXME - crappy\n    return httpClient.post({\n      uri,\n      data\n    });\n  }\n\n  private static _buildUri(dataClassName: string, entityKey: string, attributeName: string): string {\n    return '/' + dataClassName + '(' + entityKey + ')' + '/' + attributeName;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/service/base/media-base-service.ts","import Entity from './entity';\nimport {DataClass} from './dataclass';\nimport {QueryOption} from './query-option';\n\nclass Collection {\n\n  public entities: Entity[];\n  public _deferred: boolean;\n  public _count: number;\n  public _first: number;\n  public _sent: number;\n  public _pageSize: number;\n\n  [key: string]: any;\n\n  /* tslint:disable */\n  private _dataClass: DataClass;\n  /* tslint:enable */\n\n  public fetch: (options?: QueryOption) => Promise<Collection>;\n  public nextPage: () => Promise<Collection>;\n  public prevPage: () => Promise<Collection>;\n  public more: () => Promise<Collection>;\n\n  constructor({deferred, dataClass}: {deferred: boolean, dataClass: DataClass}) {\n    this.entities = [];\n    this._deferred = deferred === true;\n\n    Object.defineProperty(this, '_dataClass', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: dataClass\n    });\n  }\n}\nexport default Collection;\n\n\n\n// WEBPACK FOOTER //\n// ./src/presentation/collection.ts","import WakandaClient from '../wakanda-client';\nimport AbstractBusiness from './abstract-business';\nimport DirectoryService from '../data-access/service/directory-service';\nimport Const from '../const';\n\nexport interface ICurrentUserDBO {\n  userName: string;\n  fullName: string;\n  ID: string|number;\n}\n\nclass DirectoryBusiness extends AbstractBusiness {\n\n  private service: DirectoryService;\n\n  constructor({wakJSC}: {wakJSC: WakandaClient}) {\n    super({wakJSC});\n\n    this.service = new DirectoryService({wakJSC});\n  }\n\n  public login(username: string, password: string, duration?: number): Promise<boolean> {\n\n    let durationTime = duration || Const.DEFAULT_SESSION_DURATION;\n\n    if (!(typeof durationTime === 'number') || durationTime <= 0) {\n      throw new Error('Directory.login: invalid duration parameter');\n    }\n\n    return this.service.login(username, password, durationTime)\n      .catch(() => {\n        return Promise.reject(new Error('Directory.login: Unauthorized'));\n      });\n  }\n\n  public logout(): Promise<boolean> {\n    return this.service.logout()\n      .catch(() => {\n        return Promise.reject(new Error('Directory.logout: logout failed'));\n      });\n  }\n\n  public currentUser(): Promise<ICurrentUserDBO> {\n    return this.service.currentUser()\n      .then(dbo => {\n        return dbo;\n      })\n      .catch(() => {\n        return Promise.reject(new Error('Directory.currentUser: user is not logged in'));\n      });\n  }\n\n  public currentUserBelongsTo(group: string): Promise<boolean> {\n\n    if (!(typeof group === 'string')) {\n      throw new Error('Directory.currentUserBelongsTo: group must be a string');\n    }\n\n    return this.service.currentUserBelongsTo(group)\n      .then(() => {\n        return true;\n      })\n      .catch(() => {\n        return false;\n      });\n  }\n}\n\nexport default DirectoryBusiness;\n\n\n\n// WEBPACK FOOTER //\n// ./src/business/directory-business.ts","import AbstractService from './abstract-service';\nimport {ICurrentUserDBO} from '../../business/directory-business';\nimport {DirectoryBaseService} from './base/directory-base-service';\n\nclass DirectoryService extends AbstractService {\n\n  public login(username: string, password: string, duration: number): Promise<boolean> {\n    return DirectoryBaseService.login({\n      httpClient: this.httpClient,\n      username,\n      password,\n      duration\n    });\n  }\n\n  public logout(): Promise<boolean> {\n    return DirectoryBaseService.logout({\n      httpClient: this.httpClient\n    });\n  }\n\n  public currentUser(): Promise<ICurrentUserDBO> {\n    return DirectoryBaseService.currentUser({\n      httpClient: this.httpClient\n    });\n  }\n\n  public currentUserBelongsTo(group: string): Promise<boolean> {\n    return DirectoryBaseService.currentUserBelongsTo({\n      httpClient: this.httpClient,\n      group\n    });\n  }\n}\n\nexport default DirectoryService;\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/service/directory-service.ts","import HttpClient from '../../http/http-client';\nimport {ICurrentUserDBO} from '../../../business/directory-business';\n\nexport interface ILoginParams {\n  httpClient: HttpClient;\n  username: string;\n  password: string;\n  duration: number;\n}\n\nexport interface ICurrentUserBelongsToParams {\n  httpClient: HttpClient;\n  group: string;\n}\n\nexport class DirectoryBaseService {\n\n  public static login({httpClient, username, password, duration}:\n  {httpClient: HttpClient, username: string, password: string, duration?: number}): Promise<boolean> {\n\n    return httpClient.post({\n      uri: '/rest/$directory/login',\n      data: [username, password, duration]\n    }).then(() => {\n        return true;\n      });\n  }\n\n  public static logout({httpClient}: {httpClient: HttpClient}): Promise<boolean> {\n    return httpClient.get({\n      uri: '/rest/$directory/logout'\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n      if (obj.result && obj.result === true) {\n        return true;\n      }\n      else {\n        return <any>Promise.reject(new Error());\n      }\n    });\n  }\n\n  public static currentUser({httpClient}: {httpClient: HttpClient}): Promise<ICurrentUserDBO> {\n    return httpClient.get({\n      uri: '/rest/$directory/currentUser'\n    })\n      .then(res => {\n        let obj = JSON.parse(res.body);\n\n        if (obj.result && obj.result.ID) {\n          return obj.result;\n        }\n        else {\n          return Promise.reject(new Error());\n        }\n      });\n  }\n\n  public static currentUserBelongsTo({httpClient, group}: ICurrentUserBelongsToParams): Promise<boolean> {\n    return httpClient.post({\n      uri: '/rest/$directory/currentUserBelongsTo',\n      data: [group]\n    }).then(res => {\n      let obj = JSON.parse(res.body);\n\n      if (obj && obj.result && obj.result === true) {\n        return true;\n      }\n      else {\n        return <any>Promise.reject(new Error());\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/service/base/directory-base-service.ts","module.exports = {\n\t\"name\": \"wakanda-client\",\n\t\"main\": \"dist/wakanda-client.node.js\",\n\t\"version\": \"0.5.0\",\n\t\"description\": \"Wakanda Client allows you to easily interact with Wakanda Server on a JavaScript (browser or node) environment\",\n\t\"typings\": \"dist/wakanda-client.d.ts\",\n\t\"browser\": \"dist/wakanda-client.min.js\",\n\t\"repository\": \"wakanda/wakanda-javascript-client\",\n\t\"scripts\": {\n\t\t\"webpack-watch\": \"node ./node_modules/webpack/bin/webpack.js --progress --colors --watch\",\n\t\t\"webpack-build\": \"node ./node_modules/webpack/bin/webpack.js --progress --colors\",\n\t\t\"webpack-build:ci\": \"node ./node_modules/webpack/bin/webpack.js --progress --colors --config webpack.ci.js\",\n\t\t\"webpack-build:prod\": \"node ./node_modules/webpack/bin/webpack.js --progress --colors --config webpack.prod.js\",\n\t\t\"test:karma:single\": \"node ./node_modules/karma/bin/karma start\",\n\t\t\"test:karma:full\": \"npm run webpack-build && npm run test:karma:single\",\n\t\t\"test:node:single\": \"http_proxy=\\\"\\\" node ./node_modules/mocha/bin/mocha test/bootstrap.js test/spec/**/*.spec.js\",\n\t\t\"test:node:full\": \"npm run webpack-build && npm run test:node:single\",\n\t\t\"test-single\": \"./test.sh single\",\n\t\t\"test\": \"./test.sh\",\n\t\t\"test-server:start\": \"node test/connect/server.js & echo $! > testserver.pid && sleep 1\",\n\t\t\"test-server:stop\": \"kill `cat testserver.pid` && rm testserver.pid\",\n\t\t\"test-server:record\": \"node test/connect/server.js record & echo $! > testserver.pid\",\n\t\t\"test-server:init\": \"rm -rf test/connect/mocks && npm run test-server:record && npm run webpack-build && npm run test:node:single && npm run test:karma:single && npm run test-server:stop\",\n\t\t\"codecov\": \"cat coverage/*/lcov.info | codecov\",\n\t\t\"tsc\": \"node ./node_modules/typescript/bin/tsc\",\n\t\t\"serve\": \"node ./node_modules/.bin/concurrently -r \\\"npm run webpack-watch\\\" \\\"node ./node_modules/.bin/gulp serve\\\"\"\n\t},\n\t\"author\": \"Wakanda SAS\",\n\t\"license\": \"MIT\",\n\t\"devDependencies\": {\n\t\t\"babel-core\": \"^6.3.17\",\n\t\t\"babel-loader\": \"^6.2.0\",\n\t\t\"babel-polyfill\": \"^6.3.14\",\n\t\t\"babel-preset-es2015\": \"^6.3.13\",\n\t\t\"body-parser\": \"^1.14.2\",\n\t\t\"chai\": \"^3.4.1\",\n\t\t\"chalk\": \"^1.1.1\",\n\t\t\"codecov.io\": \"^0.1.6\",\n\t\t\"concurrently\": \"^2.0.0\",\n\t\t\"connect\": \"^3.4.0\",\n\t\t\"connect-prism\": \"mrblackus/connect-prism\",\n\t\t\"eslint\": \"^1.10.3\",\n\t\t\"eslint-loader\": \"^1.2.0\",\n\t\t\"express\": \"^4.13.3\",\n\t\t\"grunt\": \"^0.4.5\",\n\t\t\"gulp\": \"^3.9.0\",\n\t\t\"gulp-connect\": \"^2.2.0\",\n\t\t\"http-proxy-middleware\": \"^0.9.0\",\n\t\t\"isparta\": \"^4.0.0\",\n\t\t\"isparta-loader\": \"^2.0.0\",\n\t\t\"json-loader\": \"^0.5.4\",\n\t\t\"karma\": \"^1.3.0\",\n\t\t\"karma-chai\": \"^0.1.0\",\n\t\t\"karma-coverage\": \"^0.5.3\",\n\t\t\"karma-mocha\": \"^1.2.0\",\n\t\t\"karma-phantomjs-launcher\": \"^1.0.2\",\n\t\t\"karma-verbose-reporter\": \"0.0.3\",\n\t\t\"mocha\": \"^3.1.2\",\n\t\t\"path\": \"^0.12.7\",\n\t\t\"phantomjs\": \"^2.1.7\",\n\t\t\"serve-static\": \"^1.10.2\",\n\t\t\"ts-loader\": \"0.8.1\",\n\t\t\"tslint\": \"^3.9.0\",\n\t\t\"tslint-loader\": \"^2.1.4\",\n\t\t\"typescript\": \"^2.0.6\",\n\t\t\"webpack\": \"^1.12.15\"\n\t},\n\t\"dependencies\": {\n\t\t\"core-js\": \"^2.4.1\",\n\t\t\"request\": \"^2.76.0\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 32\n// module chunks = 0","const request: any = require('request');\n\nimport {HttpClient, IGetRequestOption, IPostRequestOption} from './http-client';\nimport HttpResponse from './http-response';\n\nclass NodeHttpClient extends HttpClient {\n\n  private request: any;\n  private cookieJar: any;\n\n  constructor({apiPrefix}: {apiPrefix: string}) {\n    super({apiPrefix});\n\n    this.request = request;\n    this.cookieJar = this.request.jar();\n  }\n\n  public _clearCookie(): void {\n    this.cookieJar = this.request.jar();\n  }\n\n  public get({uri, params}: IGetRequestOption): Promise<HttpResponse> {\n    try {\n      let res = super.get({uri, params});\n      if (res !== null) {\n        return Promise.resolve(res);\n      }\n    }\n    catch (e) {\n      return <any>Promise.reject(e);\n    }\n\n    let result = this._getWithoutInterceptor({uri, params});\n    return super.responseGet(uri, result);\n  }\n\n  private _getWithoutInterceptor({uri, params}: IGetRequestOption): Promise<HttpResponse> {\n    let options = {\n      url: this.prefix + uri,\n      method: 'GET',\n      qs: params,\n      jar: this.cookieJar\n    };\n\n    return this._httpResponseAdaptor({requestOptions: options});\n  }\n\n  public post({uri, data, binary}: IPostRequestOption): Promise<HttpResponse> {\n    try {\n      let res = super.post({uri, data, binary});\n      if (res !== null) {\n        return Promise.resolve(res);\n      }\n    }\n    catch (e) {\n      return <any>Promise.reject(e);\n    }\n\n    let options: any = {\n      url: this.prefix + uri,\n      method: 'POST',\n      form: data,\n      jar: this.cookieJar\n    };\n\n    try {\n      if (!binary) {\n        options.headers = {\n          'Content-Type': 'application/json'\n        };\n        options.form = JSON.stringify(data);\n      }\n    }\n    catch (e) {\n      return <any>Promise.reject(e);\n    }\n\n    let result = this._httpResponseAdaptor({requestOptions: options});\n    return super.responsePost(uri, result);\n  }\n\n  private _httpResponseAdaptor({requestOptions}: any): Promise<HttpResponse> {\n    return new Promise((resolve, reject) => {\n      this.request(requestOptions, (error: any, response: any, body: string) => {\n        if (error || response.statusCode >= 400) {\n          reject(error || {statusMessage: response.statusMessage, body: body});\n        }\n        else {\n          resolve(new HttpResponse({\n            statusCode: response.statusCode,\n            headers: [],\n            body\n          }));\n        }\n      });\n    });\n  }\n}\n\nexport default NodeHttpClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/http/node-http-client.ts","module.exports = require(\"request\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"request\"\n// module id = 34\n// module chunks = 0","import HttpResponse from './http-response';\n\nexport interface IRequestOption {\n  uri: string;\n}\n\nexport interface IGetRequestOption extends IRequestOption {\n  params?: any;\n}\n\nexport interface IPostRequestOption extends IRequestOption {\n  data?: any;\n  binary?: boolean;\n}\n\nexport type RequestInterceptor<T extends IRequestOption> = (options: T) => any;\nexport type ResponseInterceptor = (requestUri: string, promise: Promise<HttpResponse>) => Promise<HttpResponse>;\n\nexport abstract class HttpClient {\n\n  public prefix: string;\n\n  private _getRequestInterceptors: RequestInterceptor<IGetRequestOption>[];\n  private _postRequestInterceptors: RequestInterceptor<IPostRequestOption>[];\n  private _getResponseInterceptors: ResponseInterceptor[];\n  private _postResponseInterceptors: ResponseInterceptor[];\n\n  constructor({apiPrefix}: {apiPrefix: string}) {\n    this.prefix = apiPrefix;\n\n    this._getRequestInterceptors = [];\n    this._postRequestInterceptors = [];\n    this._getResponseInterceptors = [];\n    this._postResponseInterceptors = [];\n  }\n\n  public get(options: IGetRequestOption): Promise<HttpResponse> {\n    for (let i = 0; i < this._getRequestInterceptors.length; i++) {\n      let interceptor = this._getRequestInterceptors[i];\n      let res = interceptor(options);\n\n      if (res !== null && (typeof res !== 'undefined')) {\n        return res;\n      }\n    }\n\n    return null;\n  }\n\n  public post(options: IPostRequestOption): Promise<HttpResponse> {\n    for (let i = 0; i < this._postRequestInterceptors.length; i++) {\n      let interceptor = this._postRequestInterceptors[i];\n      let res = interceptor(options);\n\n      if (res !== null && (typeof res !== 'undefined')) {\n        return res;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @return {Promise} Returns either the underlying HTTP request result, or the promise returned by the interceptor if any\n   */\n  protected responseGet(requestUri: string, promise: Promise<HttpResponse>): Promise<HttpResponse> {\n    //Execute response interceptors\n\n    for (let interceptor of this._getResponseInterceptors) {\n      let res = interceptor(requestUri, promise);\n\n      if (res) {\n        return res;\n      }\n    }\n\n    return promise;\n  }\n\n  /**\n   * @return {Promise} Returns either the underlying HTTP request result, or the promise returned by the interceptor if any\n   */\n  protected responsePost(requestUri: string, promise: Promise<HttpResponse>): Promise<HttpResponse> {\n    //Execute response interceptors\n    for (let interceptor of this._postResponseInterceptors) {\n      let res = interceptor(requestUri, promise);\n\n      if (res) {\n        return res;\n      }\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {array|string} type - HTTP verb of the request to intercept\n   * @param {function} callback - The interceptor function to execute before HTTP request. If it returns something different than null, the underlying HTTP request won't be executed\n   * @returns {null|object} Returns null or an object, if an object is returned, the underlying HTTP request won't be executed\n   */\n  public registerRequestInterceptor(type: string|string[], callback: RequestInterceptor<IRequestOption>) {\n\n    let interceptorType = this._interceptorTypeToArray(type);\n\n    interceptorType.forEach(t => {\n      if (t === 'get') {\n        this._getRequestInterceptors.push(callback);\n      }\n      else if (t === 'post') {\n        this._postRequestInterceptors.push(callback);\n      }\n    });\n  }\n\n  public registerResponseInterceptor(type: string|string[], callback: ResponseInterceptor) {\n\n    let interceptorType = this._interceptorTypeToArray(type);\n\n    interceptorType.forEach(t => {\n      if (t === 'get') {\n        this._getResponseInterceptors.push(callback);\n      }\n      else if (t === 'post') {\n        this._postResponseInterceptors.push(callback);\n      }\n    });\n  }\n\n  private _interceptorTypeToArray(type: string|string[]): string[] {\n    let interceptorType: string[] = [];\n\n    if (typeof type === 'string') {\n      if (!this._isValidInterceptorType(type.toLowerCase())) {\n        throw new Error('HttpClient.registerInterceptor: invalid interceptor type');\n      }\n      else {\n        interceptorType.push(type.toLowerCase());\n      }\n    }\n    else if (Array.isArray(type)) {\n      type.forEach(t => {\n        if (!this._isValidInterceptorType(t.toLowerCase())) {\n          throw new Error('HttpClient.registerInterceptor: invalid interceptor type');\n        }\n        else {\n          interceptorType.push(t.toLowerCase());\n        }\n      });\n    }\n    else {\n      throw new Error('HttpClient.registerInterceptor: type must be a string or an array');\n    }\n\n    return interceptorType;\n  }\n\n  private _isValidInterceptorType(type: string): boolean {\n    let validTypes = ['get', 'post'];\n\n    return validTypes.indexOf(type) !== -1;\n  }\n}\n\nexport default HttpClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/http/http-client.ts","class HttpResponse {\n\n  public statusCode: number;\n  public headers: any[];\n  public body: string;\n\n  constructor({statusCode, headers, body}:\n    {statusCode: number, headers: any[], body: string}) {\n    this.statusCode = statusCode;\n    this.headers = headers || [];\n    this.body = body;\n  }\n}\n\nexport default HttpResponse;\n\n\n\n// WEBPACK FOOTER //\n// ./src/data-access/http/http-response.ts"],"sourceRoot":""}